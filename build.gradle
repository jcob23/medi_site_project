plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version "6.2.1"
}

group = 'pl.medisite'
version = '1.0'
sourceCompatibility = '19'

java {
    sourceCompatibility = '19'
}

jar {
    manifest {
        attributes 'Main-Class': 'pl.medisite.MediSiteApplication'
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //db
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.postgresql:postgresql:42.7.1'
    runtimeOnly 'org.postgresql:postgresql'

    //annotations
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //web
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    //api
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'


    //
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'io.swagger:swagger-annotations:1.6.9'


    implementation "com.google.code.findbugs:jsr305:3.0.2"

    //tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:postgresql"
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:1.16.1"
    }
}

openApiGenerate {
    generatorName = "java"
    library = 'webclient'
    configOptions =[
            serializableModel : "true",
            dateLibrary : "java8",
            serializationLibrary: "jackson"
    ]
    Provider<Directory> output = layout.buildDirectory.dir("/generated-sources/openapi")
    outputDir = output.map {it.asFile.path}
    inputSpec = "$rootDir/src/main/resources/contracts/pjp_api.json".toString()
    apiPackage = "pl.medisite.infrastructure.pjp_api.api"
    modelPackage = "pl.medisite.infrastructure.pjp_api.model"
}

sourceSets{
    main{
        java.srcDirs += "$buildDir/generated-sources/openapi/src/main/java"
    }
}

compileJava.dependsOn tasks.openApiGenerate

bootJar {
    archiveFileName = "medi-site.${archiveExtension.get()}"
}


tasks.named('test') {
    useJUnitPlatform()
}

compileJava.options.encoding = 'UTF-8'